@model Assignment9.Models.AlbumAddFormViewModel

@{
    ViewBag.Title = "AlbumAdd";
}

<script src="//cdn.ckeditor.com/4.5.7/standard/ckeditor.js"></script>

<h2>Add album for @Model.ArtistName</h2>
<p class="text-info">Complete the form, and click the Submit button</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @* These are needed when submitted form is invalid or with missing data*@
        @Html.HiddenFor(model => model.ArtistId)
        @Html.HiddenFor(model => model.ArtistPhoto)
        @Html.HiddenFor(model => model.ArtistName)

        <div class="form-group">
            @Html.LabelFor(model => model.ArtistPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="@Model.ArtistPhoto" alt="artist_photo" width="150" height="150" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UrlAlbum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UrlAlbum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UrlAlbum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GenreList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Genre", Model.GenreList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GenreList, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Depiction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Depiction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Depiction, "", new { @class = "text-danger" })
            </div>
        </div>

        <script>CKEDITOR.replace('Depiction');</script>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
                @Html.ActionLink("Cancel", "Details", new { id = Model.ArtistId }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}


@* add this for unobtrosive validation - validation is done on the client-side before POST*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}